# key
type k : o {
    predicates {
        match(k, x: lockable);
    }

    constraints {
        k1 :: match(k, x: lockable) & match(k', x: lockable) -> fail();
        k2 :: match(k, x: lockable) & match(k, x': lockable) -> fail();
    }

    inform7 {
        type {
            kind :: "key";
        }

        predicates {
            match(k, x: lockable) :: "The matching key of the {x} is the {k}";
        }
    }
}
